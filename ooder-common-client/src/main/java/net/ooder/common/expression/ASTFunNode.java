/* Generated By:JJTree: Do not edit this line. ASTFunNode.java */
/**
 * $RCSfile: ASTFunNode.java,v $
 * $Revision: 1.0 $
 * $Date: 2025/08/25 $
 * <p>
 * Copyright (c) 2025 ooder.net
 * </p>
 * <p>
 * Company: ooder.net
 * </p>
 * <p>
 * License: MIT License
 * </p>
 */
package net.ooder.common.expression;

import net.ooder.common.expression.function.*;

/**
 * Function Node
 */
public class ASTFunNode extends SimpleNode {

	/** The function class used to evaluate the node */
	private FunctionI pfmc;

	/** Name of the function */
	private String name;

	/**
	 * Creates a new ASTFunNode
	 */
	public ASTFunNode(int id) {
		super(id);
	}

	/**
	 * Creates a new ASTFunNode
	 */
	public ASTFunNode(Parser p, int id) {
		super(p, id);
	}

	/**
	 * Accept the visitor.
	 */
	public Object jjtAccept(ParserVisitor visitor, Object data) {
		return visitor.visit(this, data);
	}

	/**
	 * Sets the function for a node. A name and function class must
	 * be specified.
	 */
	public void setFunction(String name_in, FunctionI pfmc_in) {
		name = name_in;
		pfmc = pfmc_in;
	}

	/**
	 * Returns a string containing the function name.
	 */
	public String toString() {
		return "Function \"" + name + "\"";
	}

	/**
	 * Returns the math command class associated with this node.
	 */
	public FunctionI getPFMC() {
		return pfmc;
	}

	/**
	 * Returns the name of the node (operator symbol or function name).
	 */
	public String getName() {
		return name;
	}
}
